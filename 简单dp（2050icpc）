冰水挑战:

Polar Bear Pitching helps you crystallize your message.
The stage could not be any cooler, and we mean literally:
a hole cut through the ice in the frozen Baltic Sea.

2050有一项很有挑战的活动 —— Polar Bear Pitching 。
体验人跳入冰水中讲述自己的恐惧，改变以及梦想。这是没有时间限制的演讲，就看你能在冰水中呆多久！

现在，我们要依次面对 n 个冰水挑战，每个挑战你都可以选择接受或不接受。接受第 i 个挑战会让你丧失 ai点体力，因为每个挑战所处的环境不同，如果你要挑战
它，在挑战它之前你的体力 x 会变成 min(x,bi)，当你完成这个挑战的时候，你的体力会变成 x−ai，体力任何时候不允许小于等于 0，无论你是否接受第 i 个挑战
，在这个挑战结束以后你的体力都会增加 ci。

现在我们想知道最多可以完成多少个挑战。
 

Input
第一行一个正整数 T (T≤50) 表示数据组数。

接下来 T 组数据，每组第一行两个正整数 n,c (1≤n≤103,1≤c≤109)，表示挑战的数量和初始体力，接下来 n 行，每行三个非负整数 ai,bi,ci(0≤ai,bi,ci≤109)。
 

Output
对于每组数据输出一行一个数，表示你最多能完成几个挑战。
 

Sample Input

2
3 10
1 2 0
4 8 3
6 10 1
2 1
1 1 1
1 1 1

 

Sample Output

2
0
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn=1e3+10;
ll dp[maxn][maxn];//dp[i][j]表示前i项挑战接受j项的最大体力
// dp[i][j]=max(dp[i][j],dp[i-1][j]+ci) 不接受这项挑战
// dp[i][j]=max(dp[i-1][j-1],min(x,bi)-ai+ci) 接受这项挑战
ll a[maxn];
ll b[maxn];
ll c[maxn];
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        ll m;
        cin>>n>>m;

        for(int i=0;i<=n;i++)
            memset(dp[i],0,sizeof(dp[i]));
        dp[0][0]=m;
        for(int i=1;i<=n;i++)
        {
            cin>>a[i]>>b[i]>>c[i];
        }
        for(int i=0;i<=n-1;i++)
        {
            for(int j=0;j<=i;j++)
            {
                if(dp[i][j]) dp[i+1][j]=max(dp[i+1][j],dp[i][j]+c[i+1]);
                ll t=min(dp[i][j],b[i+1])-a[i+1];
                if(t>0)
                {
                    dp[i+1][j+1]=max(dp[i+1][j+1],t+c[i+1]);
                }
            }

        }
        int ans=0;
//        for(int i=0;i<=n;i++)
//        {
//            for(int j=0;j<=n;j++)
//             cout<<"i: "<<i<<" j: "<<j<<" "<<dp[i][j]<<endl;
//        }
        for(int i=1;i<=n;i++)
        {
            if(dp[n][i]!=0)
                ans=max(ans,i);
        }
        cout<<ans<<endl;

    }
    return 0;
}


分宿舍：

 “那天TA说TA要来，于是我就来啦。
那天我说我要来，于是你就来啦。
TA看到了什么？
你又看到了什么？
我看到你们在一起，我是真的很happy：）
太阳在哪里啊？
就在早上七八点。
太阳在哪里啊？
就在云的栖息地！”
——2050主题曲


2050的线下活动吸引了很多心怀梦想的年轻人。

小伙们打算组团去参加。他们一共有 n+m+2k 个人，包括 n+k 个男生，m+k 个女生，其中 k 对男女生为异性情侣，现在他们要找房间住。房间有三种类型，
双人间 a 元一间，三人间 b 元一间，这两种只能同性一起住。情侣间能住一对异性情侣，一间 c 元。除了情侣间以外，其他房间都可以不住满。

求最少花多少钱，能让小伙伴们都有地方住。
 

Input
第一行一个整数 T (1≤T≤50) 表示数据组数。

接下来 T 组数据，每组数据一行 6 个整数 n,m,k,a,b,c，其中 0≤n,m,k≤103,0≤a,b,c≤109。
 

Output
对于每组数据输出一行一个数，表示所有人住下来所需要的最小花费。


#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn=4*1e3+100;
const ll inf = 1e18;
ll dp[maxn];//住i个人的最小花费
int main()
{

    //cout<<inf<<endl;
    int t;
    cin>>t;
    while(t--)
    {
        int n,m,k;
        cin>>n>>m>>k;
        ll a, b, c;
        cin>>a>>b>>c;
        for(int i=0;i<=n+m+2*k+1;i++)
        {
            dp[i]=inf;
        }
        dp[0]=0;
        for(int i=2;i<=n+m+2*k;i++) dp[i]=min(dp[i],dp[i-2]+a);
        for(int i=3;i<=n+m+2*k;i++) dp[i]=min(dp[i],dp[i-3]+b);
        for(int i=n+m+2*k;i>=0;i--) dp[i]=min(dp[i],dp[i+1]);
        ll ans=inf;
        for(int i=0;i<=k;i++) ans=min(ans,dp[n-i+k]+dp[m-i+k]+c*(ll)i);
        cout<<ans<<endl;

    }
    return 0;
}

